2 типа препроцессинга исходного текста:
- выкидываем совсем бессмысленные символы из текста (+\&^*@®#$`›‘©/=), приводим текст к нижнему регистру
- выкидываем остальные незначащие символы (+\&^*@®#$`›‘©=/([{%!;}]),) и пустые строки, они больше не пригодятся. -№ заменяется на №

с первым типом препроцессинга выделяется название: ищется первая строка, которая начинается со слов "о" или "об", все строки до следующей пустой добавляются к ответу.
со вторым - все остальное:

тип: приводим текст к нижнему регистру, для каждого множества возможных типов проверяем степень его похожести с помощью функции fuzz.partial_ratio модуля fuzzywuzzy (считается по расстоянию Левенштейна), в качестве ответа выдается тип с наибольшей степенью похожести

номер: регистр имеет значение, поэтому он не изменяется. по всем строкам ищем одиночные символы N, №, или строки, начинающиеся с этих символов, в качестве ответа берем следующий токен или токен без соответствующего символа. возвращается первый найденный по тексту номер.

дата - самое неприятное: приводим текст к нижнему регистру. ищем в каждой строке слово "от" и проверяем не является ли идущее за ним датой следующим образом: 1) проверяем не является ли следующий токен 10-значным формата xx?xx?xxxx, где x - цифра, а ? произвольный непробельный символ. если является и дата корректна (см. ниже), берем в качестве ответа. 2) проверяем, не является ли послеследующий токен похожим на название какого-нибудь месяца (fuzzywuzzy.process.extractOne - выбирает один элемент из списка с наибольшей похожестью по Левенштейну (граница похожести 55 подобрана экспериментально)), а токены - перед и после него - целыми числами подходящей длины. проверяем дату на корректность и берем в качестве ответа.
если ответ не был найден ранее, просто ищем шаблоны по всем строкам, без привязки к слову "от". в качестве ответа берется первая найденная дата. если ответ не был найден - берется дата моего рождения в 2014 году.
корректность даты - проверка на то, что дата dd.mm.yyyy реально существовала (без падений отрабатывает конструктор datetime.date) и что год находится в промежутке [2013, 2015] (most probably).

authority: в функции __init__ мной был составлен список всех возможных, по моему мнению, authorities. приводим текст к нижнему регистру. далее я последовательно перебираю все строки текста и проверяю для очередной, не является ли она достаточно похожей (по Левенштейну) на какую-нибудь из возможных. если да, то возвращаю нормализованную строку из моего списка.